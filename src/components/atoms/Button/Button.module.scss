@import 'mixins';
@import 'variables/transitions';

.wrapper {
    @include flex;

    position: relative;
    width: fit-content;
    transition: filter 0.3s var(--ease-custom);


    @include breakpoint(desktop) {
        padding-inline: vw(15);
    }

    @include breakpoint(not-desktop) {
        padding-inline: vw(12, phone);
    }
    
    @include breakpoint(hd) {
        padding-inline: vw(10);
    }

    @include hover {
        &:not(&.is-outline) {
            filter: brightness(0.8);
        }

        &.is-outline {
            padding-inline: auto;

            color: var(--color-white);
            border-color: var(--color-red);

            &:after {
                transform: translateY(0);
            }
        }
    }

    &.is-small {
        @include breakpoint(desktop) {
            height: vw(34);
            min-width: vw(120);
        }

        @include breakpoint(not-desktop) {
            height: vw(28, phone);
            min-width: vw(70, phone);
        }
        
        @include breakpoint(hd) {
            height: vw(34 * $hd-scaling-factor);
            min-width: vw(120 * $hd-scaling-factor);
        }
    }
    
    &.is-big {
        width: fit-content;

        @include breakpoint(desktop) {
            height: vw(60);
            min-width: vw(265);
        }
        
        @include breakpoint(not-desktop) {
            height: vw(34, phone);
            min-width: vw(165, phone);
        }

        @include breakpoint(hd) {
            height: vw(60 * $hd-scaling-factor);
            min-width: vw(265 * $hd-scaling-factor);
        }
    }
    
    &.is-dark {
        background: var(--color-black);
        color: var(--color-white);
    
        svg {
            path {
                fill: var(--color-white);
            }
        }
    }
    
    &.is-light {
        background: var(--color-white);
        color: var(--color-black);
    
        svg {
            path {
                fill: var(--color-black);
            }
        }
    }
    
    &.is-accent {
        background: var(--color-red);
        color: var(--color-white);
    
        svg {
            path {
                stroke: var(--color-white) !important;
                fill: var(--color-white);
            }
        }
    }
    
    &.is-outline {
        background: transparent;
        border: var(--border-thick);
        color: var(--color-black);
        overflow: hidden;

        transition: color 0.3s var(--ease-custom), border-color 0.3s var(--ease-custom);

        &::after {
            content: '';
            position: absolute;
            inset: -1px;
            background: var(--color-red);
            transform: translateY(100%);
            transition: transform 0.3s var(--ease-custom);
            z-index: -1;
        }
    
        svg {
            path {
                fill: var(--color-black);
            }
        }
    }
    
    &.is-disabled {
        opacity: 0.5;
        pointer-events: none;
    }
    
    &.is-not-interactive {
        pointer-events: none;
    }

}


.text {
    font-family: var(--font-primary);
}

.icon {
    @include breakpoint(desktop) {
        margin-left: vw(7);
    }

    @include breakpoint(not-desktop) {
        margin-left: vw(5, phone);
    }
}

.disclaimer {
    position: absolute;
    bottom: 0;
    left: 50%;
    color: var(--color-grey-01);
    text-align: center;
    line-height: 1.2;
    width: 80%;
    
    @include breakpoint(desktop) {
        transform: translate(-50%, calc(100% + vw(8)));
    }
 
    @include breakpoint(not-desktop) {
        transform: translate(-50%, calc(100% + vw(6, phone)));
        width: 90%;
    }
}