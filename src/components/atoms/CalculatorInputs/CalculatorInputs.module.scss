@import "mixins";

$padding-inline: #{vw(16)};

.wrapper {

    @include flex(row, space-between, center);

    position: relative;
    width: fit-content;
    border: 1px solid var(--color-grey-02);
    overflow: hidden;
    z-index: 1;

    &.is-open {
        overflow: visible;
    }

    span {
        color: var(--color-grey-01);
    }

    input {
        color: var(--color-grey-01);
        transition: color 0.3s var(--ease-custom);

        &::placeholder {
            color: var(--color-grey-01);
        }

        &:focus {
            color: var(--color-black);
        }

        @include breakpoint(not-desktop) {
            padding-inline: vw(12, phone);
        }
    }


    @include breakpoint(desktop) {
        height: vw(34);
        width: vw(277);
        padding-inline: $padding-inline;
    }
    
    @include breakpoint(not-desktop) {
        height: vw(28, phone);
    }
}

.dropdown-wrapper {
    overflow: visible;
    background: var(--color-white);
    border-color: transparent;

    button {
        border: var(--border-thin);
        border-radius: inherit;
        background: var(--color-white);
        z-index: -1;
    }

    @include breakpoint(not-desktop) {
        width: vw(250, phone);
        padding-inline: vw(12, phone);

    }
}

.dropdown {
    z-index: -1;
    position: absolute;
    inset: auto 0 0 0;
    border-top: none;
    background: var(--color-white);
    border: var(--border-thick);
    border-top: none;
    clip-path: inset(0 0 100% 0);
    color: var(--color-grey-01);
    transition: clip-path 0.3s var(--ease-custom);
    overflow: auto;
    z-index: -2;
    scrollbar-width: none;


    @include breakpoint(desktop) {
        border-radius: 0 0 vw(17) vw(17);
        padding: vw(16) $padding-inline vw(10);
        transform: translateY(calc(100% - vw(8)));
        max-height: vw(400);
    }

    @include breakpoint(not-desktop) {
        border-radius: 0 0 vw(17, phone) vw(17, phone);
        padding: vw(8, phone) vw(12, phone) vw(6, phone);
        transform: translateY(calc(100% - vw(6, phone)));
    }

    li {
        transition: color 0.3s var(--ease-custom);
        cursor: pointer;

        &:not(:last-child) {
            @include breakpoint(desktop) {
                margin-bottom: vw(5);
            }
        }

        @include hover {
            color: var(--color-black);
        }
    }

    .is-open & {
        clip-path: inset(0 0 0 0);
    }

    +svg {
        pointer-events: none;
        transition: transform 0.3s var(--ease-custom);

        @include breakpoint(desktop) {
            margin-left: vw(12);
        }

        .is-open & {
            transform: rotate(180deg);
        }
    }
}

.checkbox-wrapper {
    border: none;
    overflow: visible;
    width: fit-content;

    label {
        @include breakpoint(desktop) {
            height: vw(34);
            width: fit-content;
        }

        @include breakpoint(not-desktop) {
            white-space: nowrap;
        }
    }

    span {
        position: relative;
        color: var(--color-black);

        @include breakpoint(desktop) {
            top: vw(-8);
            margin-right: vw(16);
        }
    }

    input {
        position: relative;
        cursor: pointer;
        accent-color: var(--color-black);
        appearance: none;
        border: var(--border-thick);

        &:after {
            content: '';
            display: block;
            position: absolute;
            background: transparent;
            border-radius: 50%;
            inset: vw(6);
            transition: background 0.3s var(--ease-custom);

            @include breakpoint(not-desktop) {
                inset: vw(3, phone);
            }
        }

        &:checked {
            &:after {
                background: var(--color-black);
            }
        }

        @include breakpoint(desktop) {
            width: vw(34);
            height: vw(34);
            border-radius: 50%;
        }

        @include breakpoint(not-desktop) {
            width: vw(20, phone);
            height: vw(20, phone);
            margin-left: vw(8, phone);
            margin-bottom: vw(-4, phone);
            padding: 0;
            border-radius: 50%;
        }
    }
}

.caption {
    color: var(--color-grey-02);
    
    @include breakpoint(desktop) {
        position: absolute;
        inset: auto auto 0 0;
        transform: translateY(calc(100% - vw(24)));
    }

}